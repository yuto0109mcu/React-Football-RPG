{"version":3,"sources":["img/heroine-img/hmm.PNG","img/heroine-img/waoh.PNG","img/heroine-img/sad.PNG","img/heroine-img/yeah.PNG","img/enemy-img/teki.png","img/battle-bg.jpg","img/bg.jpg","components/Decision.js","components/LoveGauge.js","components/Heroine.js","texts-source/enemyNameText.js","components/EnemyName.js","components/Enemy.js","texts-source/texts.js","components/resetCSS.js","components/Main.js","texts-source/openingTexts.js","components/Opening.js","components/Ending.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Decision","showChoices","GuageContainer","styled","div","props","love","LoveGuage","style","id","HeroineStyle","Heroine","imgUrl","src","alt","className","enemyList","EnemyNameBox","p","EnemyName","phaseIndex","enemyName","EnemyStyle","afterTextIndex","phrase","goNextText","attack","decisionJudge","Enemy","enemyImgSrc","enemyImg","badEndingText","normalEndingText","goodEndingText","goodText","badText","mainPhrases","decisions","text","good","ResetCSS","createGlobalStyle","Screen","bgImg","Main","ShowBattle","endGame","useState","textIndex","setTextIndex","setPhaseIndex","decisionIndex","setDecisionIndex","setAfterTextIndex","endingIndex","setEndingIndex","setPhrase","decisionTime","setDecisionTime","setDecidionJudge","battleTime","setBattleTime","setAttack","setLove","waohImg","setImgUrl","length","onClick","yeahImg","hmmImg","sadImg","afterBattle","resetStates","Choice","map","x","i","key","openingTexts","OpeningScreen","bgimg","Opening","startGame","openingIndex","setOpeningIndex","EndScreen","Ending","window","location","reload","ScreenStyle","App","start","setStart","end","setEnd","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54d414e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hmm.575c86dd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/waoh.895d07a6.PNG\";","module.exports = __webpack_public_path__ + \"static/media/sad.9ff51fc7.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yeah.a839a231.PNG\";","module.exports = __webpack_public_path__ + \"static/media/teki.d9884610.png\";","module.exports = __webpack_public_path__ + \"static/media/battle-bg.872a4d29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.71ef3217.jpg\";","import React from 'react'\r\n\r\nconst Decision = ({showChoices}) => {\r\n\r\n   return (\r\n      <>\r\n         {showChoices}  \r\n      </>\r\n   )\r\n}\r\n\r\nexport default Decision","import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nconst LoveGuage = ({love}) => {\r\n\r\n   // const heightStyle = {height: {love}%}\r\n\r\n   return (\r\n      <GuageContainer love={love} style >\r\n         <p>♥</p>\r\n         <div id=\"love-guage\" ></div>\r\n      </GuageContainer>\r\n   )\r\n}\r\n\r\n   const GuageContainer = styled.div`\r\n      width: 20px;\r\n      height: 200px;\r\n      border: 3px solid rgb(255, 100, 183);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      position: absolute;\r\n      right: 25px;\r\n      top: 80px;\r\n      \r\n      p {\r\n         position: absolute;\r\n         color: #fff;\r\n         top: -90px; \r\n         font-size: 6em;\r\n         color: rgb(255, 14, 183);\r\n      }\r\n      #love-guage {\r\n         width: 100%;\r\n         background-color: rgb(255, 14, 183);\r\n         height: ${props => props.love}%;\r\n         bottom: 0;\r\n      }\r\n   `\r\n\r\nexport default LoveGuage","import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nconst Heroine = ({imgUrl}) => {\r\n   return (\r\n      \r\n         <HeroineStyle>\r\n            <img src={imgUrl} alt=\"ヒロインの写真\" className=\"heroine-img\" />\r\n         </HeroineStyle>\r\n      \r\n   )\r\n}\r\n\r\nconst HeroineStyle = styled.div`\r\n   /* height: 40%; */\r\n   width: 100%;\r\n   position: absolute;\r\n   bottom: 26%;\r\n   .heroine-img {\r\n      /* height: 100%; */\r\n      width: 100%;\r\n   }\r\n`\r\n\r\nexport default Heroine","const enemyList = [\r\n   \"2トップハイプレス\",\r\n   \"5-3-2\"\r\n]\r\n\r\nexport default enemyList","import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport enemyList from \"../texts-source/enemyNameText\"\r\n\r\nconst EnemyName = ({phaseIndex}) => {\r\n   const enemyName = enemyList[phaseIndex]\r\n   return (\r\n      // <>\r\n      //    <p></p>\r\n      // </>\r\n      <EnemyNameBox>\r\n         {enemyName}\r\n      </EnemyNameBox>\r\n   )\r\n}\r\n\r\nconst EnemyNameBox = styled.p`\r\n   display: block;\r\n   color: #fff;\r\n   font-size: 1em;\r\n   text-align: center;\r\n   background-color: rgba(0, 0, 0, 0.8);\r\n   background-color: rgba(13, 80, 224, 0.774);\r\n   height: 30px;\r\n   width: 100%;\r\n   border-radius: 5px;\r\n`\r\n\r\nexport default EnemyName","import React from 'react'\r\nimport EnemyName from \"./EnemyName\"\r\nimport enemyImg from \"../img/enemy-img/teki.png\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Enemy = ({phrase, goNextText, phaseIndex, decisionJudge, attack , afterTextIndex}) => {\r\n   const enemyImgSrc = enemyImg\r\n\r\n   return (\r\n      <EnemyStyle\r\n         phrase={phrase}\r\n         goNextText={goNextText}\r\n         decisionJudge={decisionJudge}\r\n         attack={attack}\r\n         afterTextIndex={afterTextIndex}\r\n      >\r\n         <EnemyName phaseIndex={phaseIndex} />\r\n         <img \r\n            src={enemyImgSrc} \r\n            alt=\"enemy\"\r\n            className={\r\n               attack ? \"gururi\" : \"\"\r\n            }\r\n         />\r\n      </EnemyStyle>\r\n   )\r\n}\r\n\r\nconst EnemyStyle = styled.div`\r\n   /* height: 30%; */\r\n   width: 40%;\r\n   display: block;\r\n   display: ${props => props.afterTextIndex > 0 || props.phrase === props.goNextText ? \"none\" : \"block\"};\r\n   /* transform: ${props => \r\n      props.attack ? \"scale(0)\" : \"none\"\r\n   }; */\r\n   position: absolute;\r\n   left: 20px;\r\n   top: 8%;\r\n\r\n   .gururi {\r\n      transform: ${({decisionJudge}) => decisionJudge ? \"rotate(100deg)\" : \"rotate(45deg)\"};\r\n   }\r\n   img {\r\n      transition: all 1s 0s ease;\r\n      /* height: 100%; */\r\n      width: 100%;\r\n   }\r\n`\r\n\r\nexport default Enemy","// ---------------------------------------------------\r\n// --------------エンディングのテキスト---------------\r\n// ---------------------------------------------------\r\nconst badEndingText = [\r\n   \"ここまで来れたけど、あなたのサッカーIQはたいしたことないのね。\",\r\n   \"正直がっかりしたわ。\",\r\n   \"ここでお別れよ。さようなら。\"\r\n]\r\n\r\nconst normalEndingText = [\r\n   \"あなたのサッカーIQはなかなかのものだったわ。\",\r\n   \"改善の余地はあるけれど、いい判断をしてたと思うわ。\",\r\n   \"一緒にミラノへ行きましょう！\"\r\n]\r\n\r\nconst goodEndingText = [\r\n   \"あなたのサッカーIQはとても素晴らしかったわ！\",\r\n   \"要所要所でベストな判断をしていたと思うわ！\",\r\n   \"そこでなんだけど、私と付き合いましょう！代理人にもなってあげるわ！\",\r\n]\r\n\r\n\r\n\r\n// ---------------------------------------------------\r\n// ----------------選択の後のテキスト-----------------\r\n// ---------------------------------------------------\r\nconst goodText = [\r\n   \"すごい！倒したわ！\",\r\n   \"とても良い判断だったわね。\"\r\n]\r\nconst badText = [\r\n   \"なんとか倒せたわね...\",\r\n   \"だけど今のはあまり良い判断ではなかったかもしれないわね。\"\r\n]\r\nconst goNextText = \"さあ、次に進みましょう\"\r\n\r\n\r\n\r\n// ---------------------------------------------------\r\n// ----------------選択の時のテキスト-----------------\r\n// ---------------------------------------------------\r\nconst HowToDoText = \"どう対処する？\"\r\n\r\n\r\n\r\n\r\n// ---------------------------------------------------\r\n// ------------敵に遭遇したときのテキスト-------------\r\n// ---------------------------------------------------\r\nconst phase1Text = [\r\n   \"2トップハイプレスが現れたわ！\",\r\n   \"あいつはビルドアップの時に、CB二人に対してFW二人でプレスをかけてくるから危険よ。\",\r\n   \"プレスを上手く突破しないと倒せないわ！\"\r\n]\r\nconst phase1Decision = [\r\n   {\r\n      text: \"ドリブルでかわして縦パスを通そう\",\r\n      good: false\r\n   },\r\n   {\r\n      text: \"MFをDFラインに降ろして3バックを作ろう\",\r\n      good: true\r\n   }\r\n] \r\n\r\n\r\nconst phase2Text = [\r\n   \"5-3-2があらわれたわ！\",\r\n   \"あいつは最終ラインに5人いるから守備が堅いわよ。\",\r\n   \"上手く崩さないと倒せないわ！\"\r\n]\r\nconst phase2Decision = [\r\n   {\r\n      text: \"横パスで中盤3人のスライドを遅らせよう\",\r\n      good: true\r\n   },\r\n   {\r\n      text: \"縦パスを狙って、縦に速い攻撃をしよう\",\r\n      good: false\r\n   }\r\n]\r\n\r\n\r\n\r\n// ---------------------------------------------------\r\n// -----------------テキストの集まり------------------\r\n// ---------------------------------------------------\r\nconst mainPhrases = [\r\n   phase1Text,\r\n   phase2Text,\r\n   // LastPhaseText\r\n]\r\n\r\nconst decisions = [\r\n   phase1Decision,\r\n   phase2Decision\r\n]\r\n\r\nexport {decisions, mainPhrases, goodText, badText, goNextText, HowToDoText, badEndingText, goodEndingText, normalEndingText}","import React from 'react'\r\nimport styled,{createGlobalStyle} from \"styled-components\"\r\n\r\nconst ResetCSS = createGlobalStyle`\r\n   /* A Modern CSS Reset */\r\n*,*::before,*::after{box-sizing:border-box}ul[class],ol[class]{padding:0}body,h1,h2,h3,h4,p,ul[class],ol[class],figure,blockquote,dl,dd{margin:0}body{min-height:100vh;scroll-behavior:smooth;text-rendering:optimizeSpeed;line-height:1.5}ul[class],ol[class]{list-style:none}a:not([class]){text-decoration-skip-ink:auto}img{max-width:100%;display:block}article>*+*{margin-top:1em}input,button,textarea,select{font:inherit}img:not([alt]){filter:blur(10px)}@media(prefers-reduced-motion:reduce){*{animation-duration:.01ms !important;animation-iteration-count:1 !important;transition-duration:.01ms !important;scroll-behavior:auto !important}}\r\nbox-sizing: border-box;\r\n`\r\n\r\nexport default ResetCSS","import React, { useState } from 'react';\nimport Decision from \"./Decision\"\nimport LoveGuage from \"./LoveGauge\"\nimport Heroine from \"./Heroine\"\nimport Enemy from \"./Enemy\"\nimport {\n   mainPhrases, \n   decisions, \n   goodText, \n   badText, \n   goNextText, \n   goodEndingText, \n   badEndingText, \n   normalEndingText\n} from \"../texts-source/texts\"\nimport ResetCSS from \"./resetCSS\"\nimport styled from \"styled-components\"\n\nimport waohImg from \"../img/heroine-img/waoh.PNG\"\nimport sadImg from \"../img/heroine-img/sad.PNG\"\nimport yeahImg from \"../img/heroine-img/yeah.PNG\"\nimport hmmImg from \"../img/heroine-img/hmm.PNG\"\n\nimport bgImg from \"../img/battle-bg.jpg\"\n\nconst Main = ({endGame}) => {\n   \n   const [textIndex, setTextIndex] = useState(0)\n   const [phaseIndex, setPhaseIndex] = useState(0)\n   const [decisionIndex, setDecisionIndex] = useState(0)\n   const [afterTextIndex, setAfterTextIndex] = useState(0)\n   const [endingIndex, setEndingIndex] = useState(0)\n\n   const [phrase, setPhrase] = useState(mainPhrases[phaseIndex][textIndex])\n\n   const [decisionTime, setDecisionTime] = useState(false)\n   const [decisionJudge, setDecidionJudge] = useState(true)\n   const [battleTime, setBattleTime] = useState(true)\n   const [attack, setAttack] = useState(false)\n\n   const [love, setLove] = useState(50)\n\n   const [imgUrl, setImgUrl] = useState(waohImg)\n\n   const toEndScreen = () => {\n      endGame()\n   }\n\n   let ShowBattle\n   if (afterTextIndex === 2 && phaseIndex === mainPhrases.length - 1) {\n      ShowBattle = () => {\n         \n         const ending = () => {\n            setEndingIndex(endingIndex + 1)\n            if (endingIndex === 3) {\n               toEndScreen()\n            } else if (love > 50) {\n               setPhrase(goodEndingText[endingIndex])\n               setImgUrl(yeahImg)\n            } else if (love === 50) {\n               setPhrase(normalEndingText[endingIndex])\n               setImgUrl(hmmImg)\n            } else if (love < 50) {\n               setPhrase(badEndingText[endingIndex])\n               setImgUrl(sadImg)\n            }\n         }\n         return (\n            <>\n               <Heroine imgUrl={imgUrl} />\n               <p \n                  onClick={ending} \n                  className=\"text-box\"\n                  >\n                  {phrase}\n               </p>\n            </>\n         )\n      }\n   } else if (battleTime === true) {\n      ShowBattle = () => {\n         const processBattle = () => {\n            if (textIndex === mainPhrases[phaseIndex].length) {\n               setPhrase(\"どう対処する？\")\n               setDecisionTime(true)\n               setTextIndex(0)\n               setImgUrl(hmmImg)\n            } else {\n               setTextIndex(textIndex + 1)\n               setPhrase(mainPhrases[phaseIndex][textIndex])\n               setImgUrl(waohImg)\n            }\n         }\n         return(\n            <>\n               <Enemy \n                  phrase={phrase} \n                  goNextText={goNextText}\n                  phaseIndex={phaseIndex}\n                  decisionJudge={decisionJudge}\n                  attack={attack}\n                  afterTextIndex={afterTextIndex}\n               />\n               <Heroine imgUrl={imgUrl} />\n               <p \n                  onClick={processBattle} \n                  className=\"text-box\"\n               >\n                  {phrase}\n               </p>\n            </>\n         )\n      }\n   } else if (battleTime === false) {\n      let afterBattle\n      const resetStates = () => {\n         setPhaseIndex(phaseIndex + 1)\n         setBattleTime(true)\n         setTextIndex(0)\n         setAfterTextIndex(0)\n         setAttack(false)\n      }\n      if (decisionJudge === true) {\n         ShowBattle = () => {\n            afterBattle = () => {\n               if (afterTextIndex === goodText.length) {\n                  setPhrase(goNextText)\n                  resetStates()\n                  setImgUrl(hmmImg)\n               } else {\n                  setAfterTextIndex(afterTextIndex + 1)\n                  setPhrase(goodText[afterTextIndex])\n                  setImgUrl(yeahImg)\n               }\n            }\n            return(\n               <>\n                  <Enemy \n                     phrase={phrase} \n                     goNextText={goNextText}\n                     phaseIndex={phaseIndex}\n                     decisionJudge={decisionJudge}\n                     attack={attack}\n                     afterTextIndex={afterTextIndex}\n                  />\n                  <Heroine imgUrl={imgUrl} />\n                  <p \n                     onClick={afterBattle}\n                     className=\"text-box\" \n                  >\n                     {phrase}\n                  </p>\n               </>\n            )\n         }\n      } else if (decisionJudge === false) {\n         ShowBattle = () => {\n            afterBattle = () => {\n               if (afterTextIndex === badText.length) {\n                  setPhrase(goNextText)\n                  resetStates()\n                  setImgUrl(hmmImg)\n               } else {\n                  setAfterTextIndex(afterTextIndex + 1)\n                  setPhrase(badText[afterTextIndex])\n                  setImgUrl(sadImg)\n               }\n            }\n            return(\n               <>\n                  {/* <Enemy /> */}\n                  <Enemy \n                     phrase={phrase} \n                     goNextText={goNextText}\n                     phaseIndex={phaseIndex}\n                     decisionJudge={decisionJudge}\n                     attack={attack}\n                     afterTextIndex={afterTextIndex}\n                  />\n                  <Heroine imgUrl={imgUrl} />\n                  <p \n                     onClick={afterBattle} \n                     className=\"text-box\"\n                  >\n                     {phrase}\n                  </p>\n               </>\n            )\n         }\n      }\n   } else if (phrase === goNextText) {\n      ShowBattle = () => {\n         const nextPhase = () => {\n            setPhrase(mainPhrases[phaseIndex][textIndex])\n            setAttack(false)\n            // setBattleTime(true)\n         }\n         return (\n            <>\n               <Heroine imgUrl={imgUrl} />\n               <p \n                  onClick={nextPhase} \n                  className=\"text-box\"\n               >\n                  {phrase}\n               </p>\n            </>\n         )\n      }\n   }\n\n\n\n   let showChoices\n   if (decisionTime === true) {\n      const Choice = decisions[decisionIndex].map( (x, i) => {\n         const decisionMaking = () => {\n            setDecisionIndex(decisionIndex + 1)\n            setDecisionTime(false)\n            setBattleTime(false)\n            setAttack(true)\n            if(x.good === true) {\n               setPhrase(x.text)\n               setLove(love + 5)\n               setDecidionJudge(true)\n            } else if (x.good === false) {\n               setPhrase(x.text)\n               setLove(love - 5)\n               setDecidionJudge(false)\n            }\n         }\n         return (\n            <button \n               onClick={decisionMaking}\n               key={i}\n               className=\"decision-btn\"\n            >\n               {x.text}\n            </button>\n         )\n      })\n      showChoices = (\n         <div className=\"decision-bg\">\n            <div className=\"btn-box\">\n               {Choice}\n            </div>\n         </div>\n      )\n   }\n   \n\n   return (\n      <Screen bgImg={bgImg}>\n         <ResetCSS />\n         <Decision \n            showChoices={showChoices}\n         />\n         <ShowBattle />\n         <LoveGuage love={love} />\n      </Screen>\n   );\n}\n\n\nconst Screen = styled.div`\n   height: 100vh;\n   max-height: 900px;\n   width: 100%;\n   max-width: 600px;\n   margin: 0 auto;\n   background-image: url(${({bgImg}) => bgImg});\n   background-size: cover;\n   position: relative;\n\n   .text-box {\n      background-color: blue;\n      position: absolute;\n      bottom: 20px; \n      width: 94%;\n      height: 24%;\n      padding: 20px 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background-color: rgba(255, 255, 255, 0.705);\n      border-radius: 10px;\n      font-size: 1.3em;\n      border: 4px solid #fff;\n   }\n   .decision-bg {\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      position: absolute;\n      z-index: 10;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      .btn-box {\n         display: flex;\n         flex-direction: column;\n         justify-content: space-between;\n         height: 30%;\n         width: 80%;\n         .decision-btn {\n            width: 100%;\n            height: 40%;\n            border: none;\n            padding: 0 5px;\n            margin: 0 auto;\n            background-color: rgba(0, 221, 210, 0.7); \n            border: 3px solid rgb(13, 182, 224);\n            border-radius: 6px;\n         }\n      }\n   }\n`\n\nexport default Main;","const openingTexts = [\r\n   \"俺はサッカー変態の、「マウロ・イカルドゥ」\",\r\n   \"幼馴染で彼女の「ワンダ・ミラ」とウェンブリーの森に迷い込んだ時、\",\r\n   \"黒ずくめの男の怪しげな取引現場を目撃した。\",\r\n   \"取引を見るのに夢中になっていた俺たちは、背後から近づいてきたもう一人の仲間に気づかなかった。\",\r\n   \"その男にワンダ・ミラは毒薬を飲まされ、目が覚めたら・・・\",\r\n   \"記憶が無くなってしまっていたんだ。\",\r\n   \"俺はなぜか無事だった。\",\r\n   \"だけど先輩と付き合っていた彼女を、やっとの思いで手に入れたのに、\",\r\n   \"また1からのスタートになってしまった。\",\r\n   \"どうやらサッカーIQが高い人がタイプらしいから、自分のサッカーIQが高いということをを見せつけるしかないようだ。\",\r\n   \"ウェンブリーの森から脱出するためには、黒ずくめの男の手下をサッカーIQを駆使して倒していくしかないから、ついでにIQの高さを証明できる。\",\r\n   \"俺と彼女は脱出を開始した・・・\"\r\n]\r\n\r\n\r\nexport default openingTexts","import React, {useState} from 'react'\r\nimport openingTexts from \"../texts-source/openingTexts\"\r\nimport styled from \"styled-components\"\r\nimport bgimg from \"../img/bg.jpg\"\r\n\r\nconst Opening = ({startGame}) => {\r\n   const [openingIndex, setOpeningIndex] = useState(0)\r\n   const nextText = () => {\r\n      setOpeningIndex(openingIndex + 1)\r\n      if (openingIndex === openingTexts.length - 1) {\r\n         startGame()\r\n      }\r\n   }\r\n   return (\r\n            <OpeningScreen onClick={nextText} bgimg={bgimg}>\r\n               <p>\r\n                  {openingTexts[openingIndex]}\r\n               </p>\r\n            </OpeningScreen>\r\n   );\r\n}\r\n\r\nconst OpeningScreen = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   margin: 0 auto;\r\n   display: flex;\r\n   align-items: center;\r\n   background-image: url(${({bgimg}) => bgimg});\r\n   background-size: cover;\r\n   p {\r\n      background-color: rgba(0, 0, 0, 0.86);\r\n      font-size: 1.3em;\r\n      margin: 0 auto;\r\n      width: 90%;\r\n      height: 40%;\r\n      padding: 20px 12px;\r\n      color: #fff;\r\n      line-height: 2em;\r\n      border-radius: 6px;\r\n   }\r\n`\r\n\r\n\r\nexport default Opening","import React from 'react'\r\nimport styled from \"styled-components\"\r\nconst Ending = () => {\r\n\r\n   const reload = () => {\r\n      window.location.reload();\r\n   }\r\n\r\n   return (\r\n      <EndScreen>\r\n         <button onClick={reload} >PLAY AGAIN</button>\r\n         {/* <button>他のゲームで遊ぶ</button> */}\r\n      </EndScreen>\r\n   )\r\n}\r\n\r\nconst EndScreen = styled.div`\r\n   background-color: #000;\r\n   width: 100%;\r\n   height: 100%;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   button {\r\n      width: 70%;\r\n      height: 50px;\r\n      border: 3px solid #fff;\r\n      background: none;\r\n      color: #fff;\r\n      font-size: 1.6em;\r\n      font-weight: bold;\r\n      &:hover {\r\n         background-color: #fff;\r\n         cursor: pointer;\r\n         color: #000;\r\n      }\r\n   }\r\n`\r\n\r\nexport default Ending","import React, { useState } from 'react'\r\nimport Main from \"./components/Main\"\r\nimport Opening from \"./components/Opening\"\r\nimport Ending from \"./components/Ending\"\r\nimport styled from \"styled-components\"\r\n\r\nconst App = () => {\r\n\r\n   const [start, setStart] = useState(false)\r\n   const [end, setEnd] = useState(false)\r\n   const startGame = () => {\r\n      setStart(true)\r\n   }\r\n   const endGame = () => {\r\n      setEnd(true)\r\n   }\r\n\r\n   let Screen\r\n   if (end === true) {\r\n      Screen = () => {\r\n         return (\r\n            <Ending/>\r\n         )\r\n      }\r\n   } else if (start === false) {\r\n      Screen = () => {\r\n         return (\r\n            <Opening startGame={startGame} />\r\n         )\r\n      }\r\n   } else if (start === true) {\r\n      Screen = () => {\r\n         return (\r\n            <Main endGame={endGame} />\r\n         )\r\n      }\r\n   }\r\n\r\n\r\n   return (\r\n      <ScreenStyle>\r\n         <Screen />\r\n      </ScreenStyle>\r\n   )\r\n}\r\n\r\nconst ScreenStyle = styled.div`\r\n   height: 100vh;\r\n   max-height: 900px;\r\n   width: 100%;\r\n   max-width: 600px;\r\n`\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}